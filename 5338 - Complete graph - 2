#include <bits/stdc++.h>
using namespace std;
vector<vector<int>> arr;
vector<int> dist;
queue<int> q;
int n;

void bfs(int start, int end){

    dist[start] = 0;
    q.push(start);

    while(!q.empty()){
        int k = q.front();
        q.pop();
        for(int i = 0; i < n; i++){
            if(arr[k][i] == 1 && dist[i] == -1){
                dist[i] = dist[k] + 1;
                q.push(i);
            }

        }

    }

}

int main() {
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);

    
    cin >> n;
    arr.resize(n, vector<int> (n));
    dist.resize(n,-1);
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            cin >> arr[i][j];
        }
    }

    int sp ,ep;
    cin >> sp >> ep;
    bfs(sp-1,ep-1);

    cout << dist[ep-1];
}
